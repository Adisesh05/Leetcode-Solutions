{"leetcode":{"easy":0,"hard":1,"medium":7,"shas":{"0407-trapping-rain-water-ii":{"0407-trapping-rain-water-ii.py":"d6031b9e97c622fd852f76e9ccf7270b2385b1c9","README.md":"2ded31aef07495cf6fc3b4c38061d2f3a24fa909"},"1485-minimum-cost-to-make-at-least-one-valid-path-in-a-grid":{"1485-minimum-cost-to-make-at-least-one-valid-path-in-a-grid.py":"2a8c27830c3490a0375b6eb7f7310fc9c7ceb2c4","README.md":"6439480538508c05fcf2223ec20d27fd8ae1c838"},"1876-map-of-highest-peak":{"1876-map-of-highest-peak.py":"be33af36d76b9865cd29947acc44402d911a14d0","README.md":"2aed082a7ab8d8c07655ace4cc208d2f373bd353","difficulty":"medium"},"2145-grid-game":{"2145-grid-game.py":"b67a467443047c48a346f0be5fa1789df8aec1eb","README.md":"423b0070d067b807b9ca3ae0ec93e1a415c2ae29"},"2533-bitwise-xor-of-all-pairings":{"2533-bitwise-xor-of-all-pairings.py":"da3a63a874870a8c6b75e9a25a7523465ef5a3bb","README.md":"97e1029342dcb3b5c8c636915791f111e2ccb7f0"},"2685-first-completely-painted-row-or-column":{"2685-first-completely-painted-row-or-column.py":"79988f76e8b9796a47ca1a67f47ee462d699d937","README.md":"45c80d9a3bff5a74be5eaccef30f3909ef48b0a7"},"2792-neighboring-bitwise-xor":{"2792-neighboring-bitwise-xor.py":"76b8a867d47e4a059a37ceb10ddc8ca71baae4f9","README.md":"6a0a2c7b186e5e1329ad5ce9eb7040767148f13d"},"README.md":{"":"c0102694df8fb40d969c3d4ce521d3bcbe3b1352"},"1396-count-servers-that-communicate":{"1396-count-servers-that-communicate.py":"5d4d67c14ec63c278218407a3097e813d39bb138","README.md":"859a4898d2ee4058b818df8f9ef57b74ab037a76","difficulty":"medium"},"stats.json":{"":"b951d308b190da7c05e88d06e2fb126a2dbc0b89"},"0820-find-eventual-safe-states":{"0820-find-eventual-safe-states.py":"387f9716c0ea6611d2ab4c7656fde2a41faf1dc4","README.md":"59c3927e21eee9572ac3d67a2fbf75be891e9107","difficulty":"medium"},"2246-maximum-employees-to-be-invited-to-a-meeting":{"2246-maximum-employees-to-be-invited-to-a-meeting.py":"7695009c961bcb57bd6974c13f4596cf75c79a71","README.md":"0b335e100965fb2c0c8f0bf28d2e1fe9d5b8c331","difficulty":"hard"},"3219-make-lexicographically-smallest-array-by-swapping-elements":{"3219-make-lexicographically-smallest-array-by-swapping-elements.py":"70e0c30d63f6bf36fe938ba781899d63314cb9d7","README.md":"921cbed3b177622677d0f671321a7a30effd7ef9","difficulty":"medium"},"1558-course-schedule-iv":{"1558-course-schedule-iv.py":"a308717b34c58ba9c7810312abde2994df9a312b","README.md":"795a433913fdb344d42d436e159e94ee155c073a","difficulty":"medium"},"2764-maximum-number-of-fish-in-a-grid":{"2764-maximum-number-of-fish-in-a-grid.py":"95cfdeb66e473e9d354d2ecb20721773804f58df","README.md":"d50f97f0943b543d42406cd257e840ec2029a57b","difficulty":"medium"},"0684-redundant-connection":{"0684-redundant-connection.py":"7979843761b54295378a7b853e4aeebbff9f3aa9","README.md":"ec855ae4df7ef76b7e614c2cf0eb68146f0d7614","difficulty":"medium"}},"solved":8}}